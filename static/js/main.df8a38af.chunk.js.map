{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","isEditing","todo","todoName","handleRemove","bind","toggleForm","handleChange","handleUpdate","handleToggle","this","removeTodo","id","setState","evt","preventDefault","updateTodo","target","name","value","toggleCompletion","className","onSubmit","type","onChange","completed","onClick","Component","NewTodoForm","handleSubmit","newTodo","uuidv4","addTodo","htmlFor","TodoList","todos","filter","updatedTodo","updatedList","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df8a38af.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Todo.css\";\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isEditing: false, todo: this.props.todoName};\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n    }\r\n    handleRemove() {\r\n        this.props.removeTodo(this.props.id);\r\n    }\r\n    toggleForm() {\r\n        this.setState({isEditing: !this.state.isEditing});\r\n    }\r\n    handleUpdate(evt) {\r\n        evt.preventDefault();\r\n        this.props.updateTodo(this.props.id, this.state.todo);\r\n        this.setState({isEditing: false});\r\n    }\r\n    handleChange(evt) {\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    }\r\n    handleToggle() {\r\n        this.props.toggleCompletion(this.props.id);\r\n    }\r\n\r\n    render() {\r\n        let result;\r\n        if(this.state.isEditing){\r\n            result = (\r\n                <div className=\"Todo\">\r\n                    <form onSubmit={this.handleUpdate} className=\"Todo-edit-form\">\r\n                        <input type=\"text\" value={this.state.todo} name=\"todo\" onChange={this.handleChange} />\r\n                        <button>Update</button>\r\n                    </form>\r\n                </div>\r\n            );\r\n        } else {\r\n            result = (\r\n                <div className=\"Todo\">\r\n                    <li className={this.props.completed ? \"completed\" : \"\"} onClick={this.handleToggle}>\r\n                        {this.props.todoName}\r\n                    </li>\r\n                    <div className=\"Todo-buttons\">\r\n                        <button onClick={this.toggleForm}><i className=\"fas fa-pen\"></i></button>\r\n                        <button onClick={this.handleRemove}><i className=\"fas fa-trash\"></i></button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            result\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport \"./NewTodoForm.css\";\r\n\r\nclass NewTodoForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {todoName: \"\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(evt) {\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    }\r\n    handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        let newTodo = {...this.state, id: uuidv4(), completed: false}\r\n        this.props.addTodo(newTodo);\r\n        this.setState({todoName: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"NewTodoForm\">\r\n                <label htmlFor=\"newTodo\">New Todo: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"newTodo\" \r\n                    name=\"todoName\" \r\n                    value={this.state.todoName}\r\n                    onChange={this.handleChange}\r\n                />\r\n\r\n                <button>Add Todo</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTodoForm;","import React, { Component } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\nimport \"./TodoList.css\";\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos: []\r\n        };\r\n        this.addTodo = this.addTodo.bind(this);\r\n        this.removeTodo = this.removeTodo.bind(this);\r\n        this.updateTodo = this.updateTodo.bind(this);\r\n        this.toggleCompletion = this.toggleCompletion.bind(this);\r\n    }\r\n    addTodo(newTodo) {\r\n        this.setState({\r\n            todos: [...this.state.todos, newTodo]\r\n        });\r\n    }\r\n    removeTodo(id) {\r\n        this.setState({\r\n            todos: this.state.todos.filter(todo => todo.id !== id)\r\n        });\r\n    }\r\n    updateTodo(id, updatedTodo) {\r\n        const updatedList =  this.state.todos.map(todo => {\r\n            if(todo.id === id){\r\n                return {...todo, todoName: updatedTodo}\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({todos: updatedList});\r\n    }\r\n    toggleCompletion(id) {\r\n        const updatedList =  this.state.todos.map(todo => {\r\n            if(todo.id === id){\r\n                return {...todo, completed: !todo.completed}\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({todos: updatedList});\r\n    }\r\n\r\n    render() {\r\n        let todos = this.state.todos.map(todo => {\r\n            return (\r\n                <Todo \r\n                    todoName={todo.todoName}\r\n                    key={todo.id}\r\n                    id={todo.id}\r\n                    completed={todo.completed}\r\n                    removeTodo={this.removeTodo}\r\n                    updateTodo={this.updateTodo}\r\n                    toggleCompletion={this.toggleCompletion}\r\n                />\r\n        )});\r\n\r\n        return (\r\n            <div className=\"TodoList\">\r\n                <h1>Todo List</h1>\r\n                <ul>{todos}</ul>\r\n                <NewTodoForm addTodo={this.addTodo}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React, { Component } from \"react\";\nimport TodoList from \"./TodoList\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}