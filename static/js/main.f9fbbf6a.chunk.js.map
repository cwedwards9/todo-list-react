{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","isEditing","todo","todoName","handleRemove","bind","toggleForm","handleChange","handleUpdate","this","removeTodo","id","setState","evt","preventDefault","updateTodo","target","name","value","onSubmit","type","onChange","onClick","Component","NewTodoForm","handleSubmit","newTodo","uuidv4","addTodo","htmlFor","TodoList","todos","filter","updatedTodo","updatedList","map","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9fbbf6a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isEditing: false, todo: this.props.todoName};\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n    }\r\n    handleRemove() {\r\n        this.props.removeTodo(this.props.id);\r\n    }\r\n    toggleForm() {\r\n        this.setState({isEditing: !this.state.isEditing});\r\n    }\r\n    handleUpdate(evt) {\r\n        evt.preventDefault();\r\n        this.props.updateTodo(this.props.id, this.state.todo);\r\n        this.setState({isEditing: false});\r\n    }\r\n    handleChange(evt) {\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let result;\r\n        if(this.state.isEditing){\r\n            result = (\r\n                <form onSubmit={this.handleUpdate}>\r\n                    <input type=\"text\" value={this.state.todo} name=\"todo\" onChange={this.handleChange} />\r\n                    <button>Update</button>\r\n                </form>\r\n            );\r\n        } else {\r\n            result = (\r\n                <div>\r\n                    <p>{this.props.todoName}</p>\r\n                    <button onClick={this.toggleForm}>Edit</button>\r\n                    <button onClick={this.handleRemove}>X</button>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            result\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass NewTodoForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {todoName: \"\"};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(evt) {\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        });\r\n    }\r\n    handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        let newTodo = {...this.state, id: uuidv4()}\r\n        this.props.addTodo(newTodo);\r\n        this.setState({todoName: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"newTodo\">New Todo: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"newTodo\" \r\n                    name=\"todoName\" \r\n                    value={this.state.todoName}\r\n                    onChange={this.handleChange}\r\n                />\r\n\r\n                <button>Add Todo</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTodoForm;","import React, { Component } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport NewTodoForm from \"./NewTodoForm\";\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos: []\r\n        };\r\n        this.addTodo = this.addTodo.bind(this);\r\n        this.removeTodo = this.removeTodo.bind(this);\r\n        this.updateTodo = this.updateTodo.bind(this);\r\n    }\r\n    addTodo(newTodo) {\r\n        this.setState({\r\n            todos: [...this.state.todos, newTodo]\r\n        });\r\n    }\r\n    removeTodo(id) {\r\n        this.setState({\r\n            todos: this.state.todos.filter(todo => todo.id !== id)\r\n        });\r\n    }\r\n    updateTodo(id, updatedTodo) {\r\n        const updatedList =  this.state.todos.map(todo => {\r\n            if(todo.id === id){\r\n                return {...todo, todoName: updatedTodo}\r\n            }\r\n            return todo;\r\n        });\r\n        this.setState({todos: updatedList});\r\n    }\r\n\r\n    render() {\r\n        let todos = this.state.todos.map(todo => {\r\n            return (\r\n                <Todo \r\n                    todoName={todo.todoName}\r\n                    key={todo.id}\r\n                    id={todo.id}\r\n                    removeTodo={this.removeTodo}\r\n                    updateTodo={this.updateTodo}\r\n                />\r\n        )});\r\n\r\n        return (\r\n            <div>\r\n                <h1>Todo List w/ React</h1>\r\n                {todos}\r\n                <NewTodoForm addTodo={this.addTodo}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React, { Component } from \"react\";\nimport TodoList from \"./TodoList\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <TodoList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}